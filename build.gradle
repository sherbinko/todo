/*
    DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
    Copyright 2016, Andrey Shcherbinko. All rights reserved.
*/

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'edu.sc.seis.launch4j'
apply plugin: KeysPlugin
apply plugin: UnixBinPlugin

group = 'com.sherbinko'
version = '1.0'
description = "Very Simple TODO application"

def appName = 'todo'
def entryPoint = 'EntryPoint'
def launcherClass = 'org.springframework.boot.loader.JarLauncher'
def targetJar = file("${buildDir}/${appName}.jar")

repositories {
    jcenter()
}

buildscript {
    repositories {
        jcenter()

        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE"
        classpath 'gradle.plugin.edu.sc.seis.gradle:launch4j:1.6.1'
    }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web:1.3.5.RELEASE') {
        exclude(module: 'spring-boot-starter-tomcat')
    }
    compile('org.springframework.boot:spring-boot-starter-jetty:1.3.5.RELEASE') {
        exclude(group: 'org.eclipse.jetty.websocket')
    }
    compile 'org.springframework.boot:spring-boot-starter-security:1.3.5.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa:1.3.5.RELEASE'
    compile 'org.springframework.boot:spring-boot-loader:1.3.5.RELEASE'
    compile 'com.zaxxer:HikariCP:2.4.6'
    compile 'org.xerial:sqlite-jdbc:3.8.11.2'
    compile 'com.beust:jcommander:1.47'
    compile 'com.google.guava:guava:18.0'
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

///////////////////////////////////// Building main jar ////////////////////////////////////////////////
bootRepackage {
    mainClass = entryPoint

    doLast {
        jar.archivePath.renameTo(targetJar)
    }
}

////////////////////////////////////// Building exe ////////////////////////////////////////////////////
launch4j {
    jar = targetJar
    mainClassName = launcherClass
    headerType = 'console'
    outputDir = buildDir
    outfile = "${appName}.exe"
    initialHeapSize = 128
    maxHeapSize = 1024
}

task removeLaunch4jXml(type: Delete) {
    delete "${buildDir}/launch4j.xml"
}

afterEvaluate {
    createExeWithJar.finalizedBy removeLaunch4jXml
}

//////////////////////////////////// Building Linux/OS X binary ////////////////////////////////////////
unixBin {
    jar = targetJar
    bin = file("$buildDir/$appName")
    script = file("$projectDir/src/unix/launch.sh")
}

//////////////////////////////////// SSL ///////////////////////////////////////////////////////////////
keys {
    domain = '*.localhost.tv'
    storeFile = new File(sourceSets.main.resources.srcDirs[0], "keystore.pfx")
    storePass = '123456'
    certFile = new File(buildDir, 'site.cer')
}

// no tasks should run before the "clean" task
tasks.findAll{it.name != 'clean'}*.mustRunAfter(clean)
task all (dependsOn: ['clean','build','launch4j','createUnixBin', 'exportCert'])
defaultTasks 'all'